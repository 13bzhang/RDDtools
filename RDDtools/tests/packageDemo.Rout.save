
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

> library(RDDtools)
Le chargement a nécessité le package : sandwich
Le chargement a nécessité le package : zoo

Attachement du package : ‘zoo’

The following object(s) are masked from ‘package:base’:

    as.Date, as.Date.numeric

KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009

RDDtools 0.1 (rev lundi 2013-04-29). PLEASE NOTE THIS is currently only a development version. 
Run vignette('RDDtools') for the documentation
> 
> 
> 
> 
> ############################################
> ### STEP 0: Data Manipulation
> ############################################
> data(Lee2008)
> head(Lee2008)
        x      y
1  0.1049 0.5810
2  0.1393 0.4611
3 -0.0736 0.5434
4  0.0868 0.5846
5  0.3994 0.5803
6  0.1681 0.6244
> 
> Lee2008_rdd <- RDDdata(y=Lee2008$y, x=Lee2008$x, cutpoint=0)
> 
> head(Lee2008_rdd)
        x      y
1  0.1049 0.5810
2  0.1393 0.4611
3 -0.0736 0.5434
4  0.0868 0.5846
5  0.3994 0.5803
6  0.1681 0.6244
> 
> summary(Lee2008_rdd)
### RDDdata object ###

Cutpoint: 0 
Sample size: 
	-Full : 6558 
	-Left : 2740 
	-Right: 3818
Covariates: no 
> 
> ## With covariates
> 
> n_Lee <- nrow(Lee2008)
> 
> set.seed(123)
> Z<- data.frame(z1=rnorm(n_Lee), z2=rnorm(n_Lee, mean=20, sd=2), z3=sample(letters[1:3], size=n_Lee, replace=TRUE))
> Lee2008_rdd_z <- RDDdata(y=Lee2008$y, x=Lee2008$x, z=Z,cutpoint=0)
> 
> head(Lee2008_rdd_z )
        x      y          z1       z2 z3
1  0.1049 0.5810 -0.56047565 22.19827  a
2  0.1393 0.4611 -0.23017749 20.63967  a
3 -0.0736 0.5434  1.55870831 20.66365  a
4  0.0868 0.5846  0.07050839 19.47992  c
5  0.3994 0.5803  0.12928774 20.19964  a
6  0.1681 0.6244  1.71506499 20.01448  c
> summary(Lee2008_rdd_z )
### RDDdata object ###

Cutpoint: 0 
Sample size: 
	-Full : 6558 
	-Left : 2740 
	-Right: 3818
Covariates: yes 
> 
> 
> 
> 
> ############################################
> ### STEP 2: Graphical inspection
> ############################################
> 
> ### Plot 
> plot(Lee2008_rdd)
> plot(Lee2008_rdd, nplot=3, h=c(0.02, 0.03, 0.04))
> plot(Lee2008_rdd, nplot=1, h=0.1)
> 
> plot(Lee2008_rdd, xlim=c(-0.5, 0.5))
> 
> # plot(Lee2008_rdd, xlim=c(-0.5, 0.5), type="ggplot")
> 
> 
> ############################################
> ### STEP 2: Regression
> ############################################
> 
> ## few bandwidths:
> RDDbw_RSW(Lee2008_rdd)
[1] 0.03863514
> RDDbw_IK(Lee2008_rdd)
    h_opt 
0.2938561 
> 
> 
> ###### Parametric regression ######
> # Simple polynomial of order 1:
> reg_para <- RDDreg_lm(RDDobject=Lee2008_rdd)
> print(reg_para)
### RDD regression: parametric ###
	Polynomial order:  1 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.1182314  0.0056799  20.816 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.89406 -0.06189  0.00231  0.07129  0.86396 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.432948   0.004276 101.254  < 2e-16 ***
D           0.118231   0.005680  20.816  < 2e-16 ***
`x^1`       0.296906   0.011546  25.714  < 2e-16 ***
`x^1_right` 0.045978   0.013501   3.405 0.000665 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1384 on 6554 degrees of freedom
Multiple R-squared: 0.6707,	Adjusted R-squared: 0.6706 
F-statistic:  4450 on 3 and 6554 DF,  p-value: < 2.2e-16 

> plot(reg_para)
> 
> 
> ## Difference in means regression:
> # Simple polynomial of order 0:
> reg_para_0 <- RDDreg_lm(RDDobject=Lee2008_rdd, order=0)
> print(reg_para_0)
### RDD regression: parametric ###
	Polynomial order:  0 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.3513582  0.0041954  83.748 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para_0)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.69788 -0.10061 -0.00360  0.09631  0.65348 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.346522   0.003201  108.25   <2e-16 ***
D           0.351358   0.004195   83.75   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1676 on 6556 degrees of freedom
Multiple R-squared: 0.5169,	Adjusted R-squared: 0.5168 
F-statistic:  7014 on 1 and 6556 DF,  p-value: < 2.2e-16 

> plot(reg_para_0)
> 
> 
> ## Simple polynomial of order 4:
> reg_para4 <- RDDreg_lm(RDDobject=Lee2008_rdd, order=4)
> reg_para4
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076590   0.013239  5.7851 7.582e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> plot(reg_para4)
> 
> ## Restrict sample to bandwidth area:
> bw_ik <- RDDbw_IK(Lee2008_rdd)
> reg_para_ik <- RDDreg_lm(RDDobject=Lee2008_rdd, bw=bw_ik, order=4)
> reg_para_ik
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Coefficient:
  Estimate Std. Error t value Pr(>|t|)   
D 0.059164   0.020596  2.8726 0.004098 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> plot(reg_para_ik)
> 
> ## Covariates:
> reg_para4_cov <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates=".")
> reg_para4_cov
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076414   0.013244  5.7697 8.302e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para4_cov)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87348 -0.06105  0.00116  0.06744  0.71549 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.4459926  0.0193546  23.043  < 2e-16 ***
D            0.0764143  0.0132440   5.770 8.30e-09 ***
`x^1`        0.5274483  0.1580923   3.336 0.000854 ***
`x^2`        1.5439437  0.7411612   2.083 0.037277 *  
`x^3`        4.2383627  1.2489711   3.393 0.000694 ***
`x^4`        3.0522056  0.6642910   4.595 4.42e-06 ***
`x^1_right`  0.0154044  0.2092056   0.074 0.941305    
`x^2_right` -2.2468013  0.9487628  -2.368 0.017907 *  
`x^3_right` -3.0056391  1.5522889  -1.936 0.052879 .  
`x^4_right` -3.7808696  0.8093116  -4.672 3.05e-06 ***
z1          -0.0003927  0.0016820  -0.233 0.815420    
z2           0.0005547  0.0008365   0.663 0.507323    
z3b         -0.0049158  0.0040657  -1.209 0.226671    
z3c         -0.0032098  0.0041445  -0.774 0.438673    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1357 on 6544 degrees of freedom
Multiple R-squared: 0.6839,	Adjusted R-squared: 0.6833 
F-statistic:  1089 on 13 and 6544 DF,  p-value: < 2.2e-16 

> 
> reg_para4_cov_startR <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates=".", covar.strat="residual")
> reg_para4_cov_startR
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076400   0.013238  5.7713 8.225e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para4_cov_startR)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87278 -0.06132  0.00093  0.06743  0.71605 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -0.096767   0.009724  -9.951  < 2e-16 ***
D            0.076400   0.013238   5.771 8.22e-09 ***
`x^1`        0.526732   0.158000   3.334 0.000862 ***
`x^2`        1.542016   0.740778   2.082 0.037416 *  
`x^3`        4.237801   1.248388   3.395 0.000691 ***
`x^4`        3.053121   0.663993   4.598 4.34e-06 ***
`x^1_right`  0.017573   0.209092   0.084 0.933026    
`x^2_right` -2.251672   0.948170  -2.375 0.017589 *  
`x^3_right` -2.994779   1.551609  -1.930 0.053636 .  
`x^4_right` -3.786702   0.808771  -4.682 2.90e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1356 on 6548 degrees of freedom
Multiple R-squared: 0.6838,	Adjusted R-squared: 0.6834 
F-statistic:  1574 on 9 and 6548 DF,  p-value: < 2.2e-16 

> 
> plot(reg_para4_cov)
> 
> reg_para4_cov_2 <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates="z3+I(z1^2)")
> reg_para4_cov_2
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076407   0.013244  5.7691 8.331e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para4_cov_2)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87470 -0.06066  0.00094  0.06743  0.71537 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.4574160  0.0101073  45.256  < 2e-16 ***
D            0.0764072  0.0132441   5.769 8.33e-09 ***
`x^1`        0.5262757  0.1580735   3.329 0.000875 ***
`x^2`        1.5416896  0.7411354   2.080 0.037549 *  
`x^3`        4.2382250  1.2489588   3.393 0.000694 ***
`x^4`        3.0532625  0.6642844   4.596 4.38e-06 ***
`x^1_right`  0.0187563  0.2091417   0.090 0.928543    
`x^2_right` -2.2565435  0.9490378  -2.378 0.017449 *  
`x^3_right` -2.9839277  1.5519657  -1.923 0.054564 .  
`x^4_right` -3.7936046  0.8094722  -4.687 2.84e-06 ***
z3b         -0.0049255  0.0040650  -1.212 0.225675    
z3c         -0.0032074  0.0041431  -0.774 0.438863    
`I(z1^2)`   -0.0004387  0.0011923  -0.368 0.712926    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1357 on 6545 degrees of freedom
Multiple R-squared: 0.6839,	Adjusted R-squared: 0.6833 
F-statistic:  1180 on 12 and 6545 DF,  p-value: < 2.2e-16 

> 
> ###### Non-parametric regression ######
> reg_nonpara <- RDDreg_np(RDDobject=Lee2008_rdd)
> print(reg_nonpara)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.0799245  0.0068213  11.717 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_nonpara)

Call:
lm(formula = y ~ ., data = dat_step1, weights = kernel_w)

Weighted Residuals:
    Min      1Q  Median      3Q     Max 
-0.5235 -0.0015  0.0000  0.0000  0.4605 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.453283   0.004909  92.329   <2e-16 ***
x           0.390895   0.042042   9.298   <2e-16 ***
D           0.079925   0.006821  11.717   <2e-16 ***
x_right     0.053445   0.059155   0.903    0.366    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.08159 on 3196 degrees of freedom
Multiple R-squared: 0.3563,	Adjusted R-squared: 0.3557 
F-statistic: 589.7 on 3 and 3196 DF,  p-value: < 2.2e-16 

> plot(x=reg_nonpara)
> 
> reg_nonpara_sameSl <- RDDreg_np(RDDobject=Lee2008_rdd, slope="same")
> print(reg_nonpara_sameSl)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.0797792  0.0068192  11.699 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_nonpara_sameSl)

Call:
lm(formula = y ~ ., data = dat_step1, weights = kernel_w)

Weighted Residuals:
     Min       1Q   Median       3Q      Max 
-0.52538 -0.00078  0.00000  0.00000  0.45821 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.455856   0.003999  113.98   <2e-16 ***
x           0.417891   0.029575   14.13   <2e-16 ***
D           0.079779   0.006819   11.70   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.08159 on 3197 degrees of freedom
Multiple R-squared: 0.3562,	Adjusted R-squared: 0.3558 
F-statistic: 884.3 on 2 and 3197 DF,  p-value: < 2.2e-16 

> 
> 
> ###### PLOT SENSI ######
> plSe_reg_para <- plotSensi(reg_para_ik, order=4:6)
> plSe_reg_para_fac <- plotSensi(reg_para_ik, type="facet", order=4:6)
> plSe_reg_para
          bw order       LATE         se       CI_low    CI_high
1  0.1938561     4 0.07247223 0.02382386  0.025778327 0.11916613
2  0.2438561     4 0.04629929 0.02199743  0.003185119 0.08941345
3  0.2938561     4 0.05916354 0.02059588  0.018796358 0.09953073
4  0.3438561     4 0.05275995 0.01937224  0.014791068 0.09072884
5  0.3938561     4 0.05989365 0.01843283  0.023765971 0.09602133
6  0.1938561     5 0.08018637 0.02844931  0.024426748 0.13594599
7  0.2438561     5 0.07228197 0.02645597  0.020429214 0.12413472
8  0.2938561     5 0.04568221 0.02486321 -0.003048781 0.09441320
9  0.3438561     5 0.05146888 0.02340468  0.005596542 0.09734122
10 0.3938561     5 0.04623271 0.02228736  0.002550286 0.08991513
11 0.1938561     6 0.10243475 0.03299585  0.037764063 0.16710544
12 0.2438561     6 0.09506766 0.03067462  0.034946512 0.15518880
13 0.2938561     6 0.08500551 0.02891942  0.028324485 0.14168653
14 0.3438561     6 0.06514312 0.02737691  0.011485362 0.11880089
15 0.3938561     6 0.06054718 0.02609533  0.009401274 0.11169308
> plSe_reg_para_fac
          bw order       LATE         se       CI_low    CI_high
1  0.1938561     4 0.07247223 0.02382386  0.025778327 0.11916613
2  0.2438561     4 0.04629929 0.02199743  0.003185119 0.08941345
3  0.2938561     4 0.05916354 0.02059588  0.018796358 0.09953073
4  0.3438561     4 0.05275995 0.01937224  0.014791068 0.09072884
5  0.3938561     4 0.05989365 0.01843283  0.023765971 0.09602133
6  0.1938561     5 0.08018637 0.02844931  0.024426748 0.13594599
7  0.2438561     5 0.07228197 0.02645597  0.020429214 0.12413472
8  0.2938561     5 0.04568221 0.02486321 -0.003048781 0.09441320
9  0.3438561     5 0.05146888 0.02340468  0.005596542 0.09734122
10 0.3938561     5 0.04623271 0.02228736  0.002550286 0.08991513
11 0.1938561     6 0.10243475 0.03299585  0.037764063 0.16710544
12 0.2438561     6 0.09506766 0.03067462  0.034946512 0.15518880
13 0.2938561     6 0.08500551 0.02891942  0.028324485 0.14168653
14 0.3438561     6 0.06514312 0.02737691  0.011485362 0.11880089
15 0.3938561     6 0.06054718 0.02609533  0.009401274 0.11169308
> 
> 
> plSe_reg_nonpara <- plotSensi(reg_nonpara)
> plSe_reg_nonpara
         bw       LATE          se      p_value     CI_low    CI_high
1 0.1938561 0.07369768 0.008226172 6.804965e-19 0.05756583 0.08982952
2 0.2438561 0.07661912 0.007390799 1.010948e-24 0.06212695 0.09111130
3 0.2938561 0.07992454 0.006821266 4.467779e-31 0.06655004 0.09329904
4 0.3438561 0.08182321 0.006393962 1.014472e-36 0.06928717 0.09435925
5 0.3938561 0.08398642 0.006131746 8.631145e-42 0.07196488 0.09600795
> 
> plSe_reg_nonpara_HC <- plotSensi(reg_nonpara, vcov. =function(x) vcovCluster(x, clusterVar=model.frame(x)$x))
> plSe_reg_nonpara_HC
         bw       LATE          se      p_value     CI_low    CI_high
1 0.1938561 0.07369768 0.004630858 4.552671e-54 0.06461638 0.08277897
2 0.2438561 0.07661912 0.005058104 8.123591e-50 0.06670099 0.08653726
3 0.2938561 0.07992454 0.005387560 3.368324e-48 0.06936111 0.09048796
4 0.3438561 0.08182321 0.005704170 1.875255e-45 0.07063958 0.09300684
5 0.3938561 0.08398642 0.005899981 6.376696e-45 0.07241926 0.09555357
> 
> plSe_reg_para_0 <- plotSensi(reg_para_0)
> plSe_reg_para_0
  bw order       LATE          se     CI_low    CI_high
1  1     0 0.35135822 0.004195424 0.34313534 0.35958110
2  1     1 0.11823144 0.005679859 0.10709913 0.12936376
3  1     2 0.05186868 0.008087038 0.03601838 0.06771898
> 
> 
> ###### Post-inference: ######
> 
> clusterInf(reg_para, clusterVar=model.frame(reg_para)$x, type="df-adj")

z test of coefficients:

             Estimate Std. Error  z value  Pr(>|z|)    
(Intercept) 0.4329479  0.0042758 101.2544 < 2.2e-16 ***
D           0.1182314  0.0056799  20.8159 < 2.2e-16 ***
`x^1`       0.2969065  0.0115464  25.7142 < 2.2e-16 ***
`x^1_right` 0.0459776  0.0135015   3.4054 0.0006607 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

> clusterInf(reg_para, clusterVar=model.frame(reg_para)[, "x^1"], type="HC")

t test of coefficients:

            Estimate Std. Error t value  Pr(>|t|)    
(Intercept) 0.432948   0.014242 30.3995 < 2.2e-16 ***
D           0.118231   0.015255  7.7502 1.056e-14 ***
`x^1`       0.296906   0.063726  4.6591 3.239e-06 ***
`x^1_right` 0.045978   0.066170  0.6948    0.4872    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

> 
> 
> ############################################
> ### STEP 3: Validty tests
> ############################################
> 
> ## Placebo test:
> placeb_dat_reg_nonpara <- computePlacebo(reg_nonpara)
> 
> plotPlacebo(placeb_dat_reg_nonpara)
> plotPlacebo(placeb_dat_reg_nonpara, device="base")
> 
> 
> plotPlaceboDens(placeb_dat_reg_nonpara)
> 
> ptPl_reg_nonpara <- plotPlacebo(reg_nonpara)
> ptPl_reg_nonpara
   cutpoint position         LATE          se      p_value       CI_low
1 -0.403200     left -0.024718935 0.012533485 4.879388e-02 -0.049306901
2 -0.303200     left -0.006342468 0.010056335 5.283311e-01 -0.026067500
3 -0.203200     left -0.002383527 0.010235087 8.158879e-01 -0.022460150
9  0.000000     True  0.079924537 0.006821266 4.467779e-31  0.066550036
4  0.163925    right  0.014895056 0.010908299 1.723064e-01 -0.006502015
5  0.263925    right  0.005435061 0.009215405 5.553875e-01 -0.012634901
6  0.363925    right -0.011887068 0.008770348 1.754002e-01 -0.029083471
7  0.463925    right  0.006736746 0.008791850 4.435866e-01 -0.010501705
8  0.563925    right  0.010152920 0.010744342 3.447728e-01 -0.010915767
        CI_high
1 -0.0001309692
2  0.0133825629
3  0.0176930958
9  0.0932990377
4  0.0362921259
5  0.0235050226
6  0.0053093358
7  0.0239751977
8  0.0312216063
> 
> # with HC:
> ptPl_reg_nonpara_HC <- plotPlacebo(reg_nonpara, vcov. =function(x) vcovCluster(x, clusterVar=model.frame(x)$x))
> ptPl_reg_nonpara_HC
   cutpoint position         LATE          se      p_value       CI_low
1 -0.403200     left -0.024718935 0.007273330 6.977930e-04 -0.038987624
2 -0.303200     left -0.006342468 0.007828474 4.179580e-01 -0.021697654
3 -0.203200     left -0.002383527 0.007608807 7.541275e-01 -0.017308574
9  0.000000     True  0.079924537 0.005387560 3.368324e-48  0.069361114
4  0.163925    right  0.014895056 0.005079721 3.415885e-03  0.004930978
5  0.263925    right  0.005435061 0.009521907 5.681858e-01 -0.013235904
6  0.363925    right -0.011887068 0.009213640 1.970932e-01 -0.029952653
7  0.463925    right  0.006736746 0.009332790 4.704497e-01 -0.011562342
8  0.563925    right  0.010152920 0.008135788 2.121720e-01 -0.005800628
       CI_high
1 -0.010450246
2  0.009012717
3  0.012541520
9  0.090487960
4  0.024859133
5  0.024106025
6  0.006178517
7  0.025035834
8  0.026106467
> 
> ptPl_reg_para_0 <- plotPlacebo(reg_para_0)
> ptPl_reg_para_0
   cutpoint position         LATE          se    p_value       CI_low
1 -0.403200     left -0.024718935 0.012533485 0.04879388 -0.049306901
2 -0.303200     left -0.006342468 0.010056335 0.52833114 -0.026067500
3 -0.203200     left -0.002383527 0.010235087 0.81588791 -0.022460150
9  0.000000     True  0.351358219 0.004195424 0.00000000  0.343133821
4  0.163925    right  0.014895056 0.010908299 0.17230640 -0.006502015
5  0.263925    right  0.005435061 0.009215405 0.55538753 -0.012634901
6  0.363925    right -0.011887068 0.008770348 0.17540021 -0.029083471
7  0.463925    right  0.006736746 0.008791850 0.44358662 -0.010501705
8  0.563925    right  0.010152920 0.010744342 0.34477284 -0.010915767
        CI_high
1 -0.0001309692
2  0.0133825629
3  0.0176930958
9  0.3595826164
4  0.0362921259
5  0.0235050226
6  0.0053093358
7  0.0239751977
8  0.0312216063
> 
> 
> 
> ## density tests
> dens_test(Lee2008_rdd)
[1] 0.1952357
> 
> ## Covariates tests
> covarTest_mean(Lee2008_rdd_z)
   mean of x   mean of y   Difference  statistic  p.value  
z1 0.001423447 0.006434915 0.005011469 -0.2005416 0.8410639
z2 20.0026     19.97715    -0.02544849 0.5065413  0.6124957
z3 1.978102    1.989785    0.01168304  -0.5762938 0.5644386
> covarTest_mean(Lee2008_rdd_z, bw=0.1)
   mean of x  mean of y  Difference   statistic  p.value  
z1 0.04586551 0.04336096 -0.002504545 0.04416868 0.9647773
z2 19.9098    20.02098   0.1111845    -0.9421677 0.3462983
z3 1.963605   2.006329   0.04272426   -0.9146029 0.3605844
> covarTest_dis(Lee2008_rdd_z)
   statistic   p.value  
z1 0.02251666  0.3936811
z2 0.02684002  0.2006513
z3 0.007305005 0.9999956
Message d'avis :
In ks.test(x[regime], x[!regime], exact = exact) :
  p-values will be approximate in the presence of ties
> covarTest_dis(Lee2008_rdd_z, bw=0.1)
   statistic  p.value  
z1 0.03544633 0.8429655
z2 0.04718864 0.512701 
z3 0.02398646 0.9950799
Message d'avis :
In ks.test(x[regime], x[!regime], exact = exact) :
  p-values will be approximate in the presence of ties
> 
> proc.time()
utilisateur     système      écoulé 
     11.460       0.150      12.246 
